// <auto-generated />
using System;
using HospiHouse.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospiHouse.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HospiHouse.App.Dominio.Auxiliar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idAuxiliar")
                        .HasColumnType("int");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("auxiliares");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Enfermera", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horasLaboralesSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("targetaProfecional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("enfermeras");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Familiar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPaciente")
                        .HasColumnType("int");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pacienteid")
                        .HasColumnType("int");

                    b.Property<string>("parentescoPaciente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("pacienteid");

                    b.ToTable("familiares");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.HistoriaMedica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entornoHospitalizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idHistoriaMedica")
                        .HasColumnType("int");

                    b.Property<int>("idMedico")
                        .HasColumnType("int");

                    b.Property<int>("idPaciente")
                        .HasColumnType("int");

                    b.Property<int>("medicoid")
                        .HasColumnType("int");

                    b.Property<int>("pacienteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("medicoid");

                    b.HasIndex("pacienteid");

                    b.ToTable("historiasMedicas");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Medico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("registroReTHUS")
                        .HasColumnType("int");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("medicos");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Paciente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("pacientes");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.SignosVitales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("enfermeraid")
                        .HasColumnType("int");

                    b.Property<string>("estadoGeneral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaYHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("frecuenciaCardiaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frecuenciaRespiratoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("historiaMedicaid")
                        .HasColumnType("int");

                    b.Property<int>("idEnfermera")
                        .HasColumnType("int");

                    b.Property<int>("idHistoriaMedica")
                        .HasColumnType("int");

                    b.Property<string>("oximetria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("precionArterial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("enfermeraid");

                    b.HasIndex("historiaMedicaid");

                    b.ToTable("signosVitales");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("historiaMedicaid")
                        .HasColumnType("int");

                    b.Property<int>("idHistoriaMedica")
                        .HasColumnType("int");

                    b.Property<string>("sugerencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("historiaMedicaid");

                    b.ToTable("sugerenciasCuidado");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Familiar", b =>
                {
                    b.HasOne("HospiHouse.App.Dominio.Paciente", "paciente")
                        .WithMany("ListaFamiliares")
                        .HasForeignKey("pacienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.HistoriaMedica", b =>
                {
                    b.HasOne("HospiHouse.App.Dominio.Medico", "medico")
                        .WithMany("ListaHIstoriasMedicas")
                        .HasForeignKey("medicoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospiHouse.App.Dominio.Paciente", "paciente")
                        .WithMany("ListaHistoriasMedicas")
                        .HasForeignKey("pacienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medico");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.SignosVitales", b =>
                {
                    b.HasOne("HospiHouse.App.Dominio.Enfermera", "enfermera")
                        .WithMany("ListaSignosVitales")
                        .HasForeignKey("enfermeraid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospiHouse.App.Dominio.HistoriaMedica", "historiaMedica")
                        .WithMany("ListaSignosVitales")
                        .HasForeignKey("historiaMedicaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("enfermera");

                    b.Navigation("historiaMedica");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.HasOne("HospiHouse.App.Dominio.HistoriaMedica", "historiaMedica")
                        .WithMany("ListaSugerenciasCuidado")
                        .HasForeignKey("historiaMedicaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("historiaMedica");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Enfermera", b =>
                {
                    b.Navigation("ListaSignosVitales");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.HistoriaMedica", b =>
                {
                    b.Navigation("ListaSignosVitales");

                    b.Navigation("ListaSugerenciasCuidado");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Medico", b =>
                {
                    b.Navigation("ListaHIstoriasMedicas");
                });

            modelBuilder.Entity("HospiHouse.App.Dominio.Paciente", b =>
                {
                    b.Navigation("ListaFamiliares");

                    b.Navigation("ListaHistoriasMedicas");
                });
#pragma warning restore 612, 618
        }
    }
}
